{
  "head": {
    "title": "Extract content from {{FileFormatUp}} files in {{ProgLang}} applications",
    "description": "Leverage {{ProdShortName}} to parse and retrieve structured data, text, tables, and images from {{FileFormatUp}} files in {{ProgLang}}, without needing external tools."
  },
  "header": {
    "title": "Extract data from {{FileFormatUp}} documents in {{ProgLang}}",
    "description": "Seamlessly extract structured content such as text, metadata, tables, and graphics from PDFs, Word, Excel, and image-based documents using {{ProdShortName}} in your {{EnvNameShort}} apps.",
    "subtitle": "{{ProdFullName}}",
    "action_title": "Download Free Trial"
  },
  "about": {
    "title": "What is {{ProdFullName}}?",
    "content": "[{{ProdShortName}}]({{PlatformLink}}) is a robust API built for {{EnvName}} developers, offering advanced document parsing functionality. It allows you to extract and process textual data, images, tables, structured fields, and barcodes from numerous formats like PDF, DOCX, XLSX, PPTX, and more — all without installing extra libraries."
  },
  "formats": {
    "title": "File types supported for content extraction",
    "description": "{{ProdShortName}} is compatible with a wide range of document and image file types, making it easy to extract information from commonly used formats in parsing and data automation scenarios."
  },
  "examples": {
    "comment_1": "Initialize your {{textParser}} with the input document",
    "comment_2": "Retrieve all available text content from the document",
    "comment_3": "If no text is found, the return value will be null",
    "comment_4": "Incorporate the extracted content into your solution",
    "comment_5": "This format may not support text extraction"
  },
  "steps": {
    "title": "How to extract data from {{FileFormatCap}} using {{ProgLang}}",
    "content": {
      "title": "To extract useful information from {{FileFormatUp}} documents in your {{EnvName}} projects using [{{ProdShortName}}]({{PlatformLink}}), follow these instructions:",
      "step_1": "Open the {{FileFormatUp}} file with a {{textParser}} object.",
      "step_2": "Use the parser to retrieve the required data (text, tables, metadata, etc.).",
      "step_3": "Ensure the output is correct and complete.",
      "step_4": "Integrate the parsed content into your data flow, business processes, or applications."
    }
  },
  "more_features": {
    "title": "Versatile document parsing functionality",
    "description": "{{ProdShortName}} does more than just text extraction—it supports full parsing of barcodes, metadata, images, tables and other data to power intelligent automation and data-driven applications.",
    "image_description": "Visual overview of document data parsing and extraction",
    "feature_1": {
      "title": "Extract from multiple file formats",
      "content": "Access data like text, tables, and media from widely used file types such as PDF, Word, Excel, PowerPoint, HTML, and others."
    },
    "feature_2": {
      "title": "Parse content from digital and scanned sources",
      "content": "Process content from both native digital files and scanned images, using OCR when necessary to interpret embedded text."
    },
    "feature_3": {
      "title": "Flexible configuration options",
      "content": "Tailor your parsing with settings for page selection, layout zones, and custom field templates to meet specific extraction needs."
    },
    "code_1": {
      "title": "Parsing PDF using a data extraction template",
      "content": "This sample shows how to extract structured fields from a PDF using a custom template via {{ProdShortName}}.",
      "comment_1": "Open the PDF using the {{textParser}} class",
      "comment_2": "Apply the parsing template to extract defined data",
      "comment_3": "Check if the template-based extraction is available",
      "comment_4": "Work with the extracted data fields",
      "comment_5": "Define detector settings for extracting the 'Details' section"
    }
  }
}