{
  "head": {
    "title": "Parse data from {{FileFormatUp}} files in {{ProgLang}} apps",
    "description": "Use {{ProdShortName}} to extract text, images, tables, and other data from {{FileFormatUp}} files in {{ProgLang}} without relying on third-party tools."
  },
  "header": {
    "title": "Parse {{FileFormatUp}} documents using {{ProgLang}}",
    "description": "Efficiently extract text, metadata, tables, and images from PDF, Word, Excel, and image files using {{ProdShortName}} in your {{EnvNameShort}} projects.",
    "subtitle": "{{ProdFullName}}",
    "action_title": "Download Free Trial"
  },
  "about": {
    "title": "About {{ProdFullName}} API",
    "content": "[{{ProdShortName}}]({{PlatformLink}}) is a feature-rich document parsing API designed for {{EnvName}} developers. It supports extracting plain and structured text, metadata, images, tables, and barcodes from popular formats like PDF, DOCX, XLSX, PPTX, and more — all without additional software dependencies."
  },
  "formats": {
    "title": "Supported formats for data extraction",
    "description": "{{ProdShortName}} enables parsing across a broad set of document and image formats. Explore the supported file types commonly used in data extraction workflows."
  },
  "examples": {
    "comment_1": "Load your document into {{textParser}}",
    "comment_2": "Extract all text content from the file",
    "comment_3": "If the text is unavailable, the result will be null",
    "comment_4": "Use the extracted text in your application",
    "comment_5": "Text extraction is unsupported for this format"
  },
  "steps": {
    "title": "Steps to extract data from {{FileformatCap}} in {{ProgLang}}",
    "content": {
      "title": "Follow these steps to parse content from {{FileFormatUp}} documents in your {{EnvName}} apps using [{{ProdShortName}}]({{PlatformLink}}):",
      "step_1": "Load the {{FileFormatUp}} document using a {{textParser}} instance.",
      "step_2": "Extract the desired content such as text, tables, or metadata.",
      "step_3": "Verify that the extracted data is valid.",
      "step_4": "Use the parsed output in your downstream processing, automation, or business systems."
    }
  },
  "more_features": {
    "title": "Comprehensive document parsing capabilities",
    "description": "{{ProdShortName}} enables more than just text reading — it supports barcode extraction, image parsing, metadata access, and structured data processing for advanced automation and data analysis.",
    "image_description": "Document content extraction and parsing capabilities",
    "feature_1": {
      "title": "Support for diverse file content types",
      "content": "Extract data including text, images, tables, and fields from document formats like PDF, Word, Excel, HTML, and more."
    },
    "feature_2": {
      "title": "Work with both scanned and digital files",
      "content": "Parse data from scanned documents and born-digital files alike, with support for OCR and layout-aware extraction."
    },
    "feature_3": {
      "title": "Configurable extraction parameters",
      "content": "Adjust parsing logic with flexible options like page range selection, region targeting, and field detection templates."
    },
    "code_1": {
      "title": "How to parse PDF using templates",
      "content": "This example shows how to extract structured data from a PDF using a predefined parsing template with {{ProdShortName}}.",
      "comment_1": "Load the PDF file with the {{textParser}} class",
      "comment_2": "Parse the document by the template",
      "comment_3": "Check if form extraction is supported",
      "comment_4": "Process obtained fields",
      "comment_5": "Create detector parameters for 'Details' table"
    }
  }
}