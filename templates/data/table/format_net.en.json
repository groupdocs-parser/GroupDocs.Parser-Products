{
  "head": {
    "title": "Extract tables from {{FileFormatUp}} files in {{ProgLang}} apps",
    "description": "Use {{ProdShortName}} to locate and extract structured table data from {{FileFormatUp}} files in {{ProgLang}} applications without extra dependencies."
  },
  "header": {
    "title": "Extract tables from {{FileFormatUp}} using {{ProgLang}}",
    "description": "Quickly identify and extract table structures from PDF, Word, Excel, and other file formats using {{ProdShortName}} in your {{EnvNameShort}} projects.",
    "subtitle": "{{ProdFullName}}",
    "action_title": "Download Free Trial"
  },
  "about": {
    "title": "About {{ProdFullName}} API",
    "content": "[{{ProdShortName}}]({{PlatformLink}}) is a comprehensive document parsing API built for {{EnvName}} developers. It enables accurate extraction of text, tables, images, hyperlinks, and other structured elements from formats like PDF, DOCX, XLSX, PPTX, and many others â€” without the need for third-party software."
  },
  "formats": {
    "title": "Supported formats for table extraction",
    "description": "{{ProdShortName}} can extract table data from a variety of document types. Below are the most frequently used formats for structured table parsing."
  },
  "examples": {
    "comment_1": "Open the document that contains table data using {{textParser}}",
    "comment_2": "Check if the format supports table recognition",
    "comment_3": "Handle documents that do not support table parsing",
    "comment_4": "Define how table structure should be recognized",
    "comment_5": "Specify extraction parameters for table data",
    "comment_6": "Extract tables from the file content",
    "comment_7": "Loop through each detected table"
  },
  "steps": {
    "title": "Steps to extract tables from {{FileformatCap}} in {{ProgLang}}",
    "content": {
      "title": "Follow these instructions to extract tables from {{FileFormatUp}} files using [{{ProdShortName}}]({{PlatformLink}}) within your {{EnvName}} environment:",
      "step_1": "Initialize a {{textParser}} instance and load your {{FileFormatUp}} document.",
      "step_2": "Check if table extraction is supported for the input format.",
      "step_3": "Extract table content from the file.",
      "step_4": "Use the structured table data for reporting, automation, or analytics."
    }
  },
  "more_features": {
    "title": "Powerful data extraction capabilities",
    "description": "In addition to table parsing, {{ProdShortName}} can extract rich content such as text blocks, images, metadata, and other structured data to facilitate document automation.",
    "image_description": "Table recognition and content extraction",
    "feature_1": {
      "title": "Accurate multi-format table detection",
      "content": "Extract tabular data from DOCX, XLSX, PDF, HTML, and similar formats with high precision."
    },
    "feature_2": {
      "title": "Parse table structures from files",
      "content": "Efficiently retrieve table data from documents and spreadsheets without formatting loss."
    },
    "feature_3": {
      "title": "Flexible table extraction configuration",
      "content": "Adjust layout detection, column alignment, and header/footer options for precise control over output."
    },
    "code_1": {
      "title": "How to extract tables from Excel spreadsheets",
      "content": "This code sample shows how to read and iterate through table data in an XLSX file using {{ProdShortName}}.",
      "comment_1": "Open the Excel file using the {{textParser}} API",
      "comment_2": "Exit if tables cannot be extracted from the format",
      "comment_3": "Use layout rules to locate tabular content",
      "comment_4": "Set up extraction parameters for tables",
      "comment_5": "Perform the table extraction operation",
      "comment_6": "Go through each detected table structure",
      "comment_7": "Iterate through each row in the table",
      "comment_8": "Loop through the cells in each row",
      "comment_9": "Access the current table cell",
      "comment_10": "Display the text content of each cell"
    }
  }
}