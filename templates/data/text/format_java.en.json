{
  "head": {
    "title": "Retrieve text from {{FileFormatUp}} files in {{ProgLang}} applications",
    "description": "Leverage {{ProdShortName}} to extract unstructured or structured text content from {{FileFormatUp}} documents in {{ProgLang}}, without any external dependencies."
  },
  "header": {
    "title": "Retrieve text from {{FileFormatUp}} using {{ProgLang}}",
    "description": "Seamlessly pull readable or structured text from files like PDF, Word, Excel, and more using {{ProdShortName}} in your {{EnvNameShort}} development projects.",
    "subtitle": "{{ProdFullName}}",
    "action_title": "Download Free Trial"
  },
  "about": {
    "title": "Introducing the {{ProdFullName}} API",
    "content": "[{{ProdShortName}}]({{PlatformLink}}) is a robust and scalable document parser designed for {{EnvName}} developers. It offers capabilities to accurately extract text, tables, images, and structured components from various formats including PDF, DOCX, XLSX, PPTX, and others—without relying on external utilities."
  },
  "formats": {
    "title": "File types supported for text extraction",
    "description": "{{ProdShortName}} is capable of pulling text content from numerous file and image formats. Below are the most commonly used types it supports."
  },
  "examples": {
    "comment_1": "Initialize {{textParser}} with your document",
    "comment_2": "Read and extract all textual data",
    "comment_3": "Return null if text content is missing",
    "comment_4": "Integrate the extracted text into your workflow",
    "comment_5": "Skip unsupported text extraction formats"
  },
  "steps": {
    "title": "How to retrieve text from {{FileFormatCap}} using {{ProgLang}}",
    "content": {
      "title": "Follow the steps below to extract text from {{FileFormatUp}} files using [{{ProdShortName}}]({{PlatformLink}}) within your {{EnvName}} project:",
      "step_1": "Load the {{FileFormatUp}} document using the {{textParser}} class.",
      "step_2": "Perform text extraction from the file content.",
      "step_3": "Check if the text was successfully retrieved.",
      "step_4": "Use the text data in search, analytics, or automation systems."
    }
  },
  "more_features": {
    "title": "Rich text extraction functionality",
    "description": "{{ProdShortName}} goes beyond simple text extraction—supporting retrieval of images, metadata, and structured data to enhance content processing tasks.",
    "image_description": "Extract and structure text content from documents",
    "feature_1": {
      "title": "Works across numerous document formats",
      "content": "Capture both raw and structured text from DOCX, XLSX, PPTX, PDF, HTML, and various formats."
    },
    "feature_2": {
      "title": "Extract text from visual and textual content",
      "content": "Parse text from scanned documents, slides, spreadsheets, and other file types while preserving logical structure."
    },
    "feature_3": {
      "title": "Detailed control over extraction process",
      "content": "Configure page ranges, layout zones, and accuracy parameters for fine-tuned text parsing."
    },
    "code_1": {
      "title": "Sample: Extracting text regions from a PPTX document",
      "content": "This sample demonstrates extracting text blocks along with their spatial coordinates from a PowerPoint presentation using {{ProdShortName}}.",
      "comment_1": "Load your PPTX file with the {{textParser}} API",
      "comment_2": "Get all rectangular text zones",
      "comment_3": "Exit if this feature is not supported",
      "comment_4": "Loop through text areas by page",
      "comment_5": "Process each text block with its page number and bounding rectangle"
    }
  }
}